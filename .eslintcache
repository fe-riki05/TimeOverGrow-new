[{"/Users/macbookpro/Documents/TimeOverGrow-new/middleware/authenticated.js":"1","/Users/macbookpro/Documents/TimeOverGrow-new/plugins/firebase.auth.js":"2","/Users/macbookpro/Documents/TimeOverGrow-new/plugins/firebase.js":"3","/Users/macbookpro/Documents/TimeOverGrow-new/store/index.js":"4","/Users/macbookpro/Documents/TimeOverGrow-new/layouts/error.vue":"5","/Users/macbookpro/Documents/TimeOverGrow-new/layouts/default.vue":"6","/Users/macbookpro/Documents/TimeOverGrow-new/pages/top.vue":"7","/Users/macbookpro/Documents/TimeOverGrow-new/layouts/Header.vue":"8","/Users/macbookpro/Documents/TimeOverGrow-new/pages/index.vue":"9","/Users/macbookpro/Documents/TimeOverGrow-new/pages/login.vue":"10","/Users/macbookpro/Documents/TimeOverGrow-new/pages/register.vue":"11","/Users/macbookpro/Documents/TimeOverGrow-new/pages/MyPage.vue":"12","/Users/macbookpro/Documents/TimeOverGrow-new/components/SocialLogin.vue":"13","/Users/macbookpro/Documents/TimeOverGrow-new/components/Chart.vue":"14","/Users/macbookpro/Documents/TimeOverGrow-new/components/Main.vue":"15","/Users/macbookpro/Documents/TimeOverGrow-new/components/TextBox.vue":"16","/Users/macbookpro/Documents/TimeOverGrow-new/components/TotalTime.vue":"17","/Users/macbookpro/Documents/TimeOverGrow-new/components/MessageList.vue":"18","/Users/macbookpro/Documents/TimeOverGrow-new/components/DialogEdit.vue":"19","/Users/macbookpro/Documents/TimeOverGrow-new/components/Button.vue":"20","/Users/macbookpro/Documents/TimeOverGrow-new/components/Message.vue":"21","/Users/macbookpro/Documents/TimeOverGrow-new/models/Message.js":"22","/Users/macbookpro/Documents/TimeOverGrow-new/models/Tag.js":"23"},{"size":718,"mtime":1615443118727,"results":"24","hashOfConfig":"25"},{"size":249,"mtime":1615443118832,"results":"26","hashOfConfig":"25"},{"size":643,"mtime":1615443118892,"results":"27","hashOfConfig":"25"},{"size":799,"mtime":1615443119624,"results":"28","hashOfConfig":"25"},{"size":673,"mtime":1615443120007,"results":"29","hashOfConfig":"25"},{"size":611,"mtime":1615443120072,"results":"30","hashOfConfig":"25"},{"size":1095,"mtime":1615443120892,"results":"31","hashOfConfig":"25"},{"size":3478,"mtime":1615443119878,"results":"32","hashOfConfig":"25"},{"size":682,"mtime":1615443121070,"results":"33","hashOfConfig":"25"},{"size":4709,"mtime":1615443120522,"results":"34","hashOfConfig":"25"},{"size":7970,"mtime":1615443122241,"results":"35","hashOfConfig":"25"},{"size":6143,"mtime":1615443121471,"results":"36","hashOfConfig":"25"},{"size":3611,"mtime":1615443107471,"results":"37","hashOfConfig":"25"},{"size":305,"mtime":1615443107615,"results":"38","hashOfConfig":"25"},{"size":10184,"mtime":1615443108086,"results":"39","hashOfConfig":"25"},{"size":9594,"mtime":1615443110720,"results":"40","hashOfConfig":"25"},{"size":2543,"mtime":1615443109132,"results":"41","hashOfConfig":"25"},{"size":1145,"mtime":1615443111053,"results":"42","hashOfConfig":"25"},{"size":9244,"mtime":1615443109938,"results":"43","hashOfConfig":"25"},{"size":858,"mtime":1615443112436,"results":"44","hashOfConfig":"25"},{"size":3453,"mtime":1615443112664,"results":"45","hashOfConfig":"25"},{"size":2178,"mtime":1615443112922,"results":"46","hashOfConfig":"25"},{"size":567,"mtime":1615443113086,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"msegix",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":4,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","errorCount":2,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":2,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/macbookpro/Documents/TimeOverGrow-new/middleware/authenticated.js",[],"/Users/macbookpro/Documents/TimeOverGrow-new/plugins/firebase.auth.js",[],["105"],"/Users/macbookpro/Documents/TimeOverGrow-new/plugins/firebase.js",[],"/Users/macbookpro/Documents/TimeOverGrow-new/store/index.js",[],"/Users/macbookpro/Documents/TimeOverGrow-new/layouts/error.vue",[],["106"],"/Users/macbookpro/Documents/TimeOverGrow-new/layouts/default.vue",[],"/Users/macbookpro/Documents/TimeOverGrow-new/pages/top.vue",[],"/Users/macbookpro/Documents/TimeOverGrow-new/layouts/Header.vue",[],"/Users/macbookpro/Documents/TimeOverGrow-new/pages/index.vue",[],"/Users/macbookpro/Documents/TimeOverGrow-new/pages/login.vue",["107"],"<template>\n  <v-app>\n    <Header :logout=\"false\" :humbargarmenu=\"false\" />\n    <v-spacer></v-spacer>\n    <v-container class=\"mt-8\">\n      <v-row justify=\"center\">\n        <v-col cols=\"10\" sm=\"8\" md=\"6\" class=\"form\">\n          <h2 class=\"text-center subtitle-1 font-weight-bold mb-2 h1\">\n            メールアドレスでログイン\n          </h2>\n          <v-row>\n            <v-col>\n              <v-tabs\n                v-model=\"tab\"\n                background-color=\"transparent\"\n                color=\"blue accent-2\"\n                grow\n                class=\"mb-3\"\n              >\n                <v-tab to=\"/login\"> ログイン </v-tab>\n                <v-tab to=\"/register\"> アカウント登録 </v-tab>\n              </v-tabs>\n              <v-row>\n                <v-col sm=\"12\">\n                  <v-card flat class=\"pa-5\">\n                    <v-card-text class=\"pa-0\">\n                      <v-form\n                        ref=\"login_form\"\n                        v-model=\"login_valid\"\n                        lazy-validation\n                      >\n                        <v-text-field\n                          v-model=\"login_email\"\n                          label=\"メールアドレス\"\n                          required\n                        />\n                        <v-text-field\n                          v-model=\"login_password\"\n                          label=\"パスワード\"\n                          required\n                          :append-icon=\"\n                            show_loginpassword ? 'mdi-eye' : 'mdi-eye-off'\n                          \"\n                          :type=\"show_loginpassword ? 'text' : 'password'\"\n                          @click:append=\"\n                            show_loginpassword = !show_loginpassword\n                          \"\n                        />\n                        <v-alert v-if=\"loginErrorMsg\" dense text type=\"error\">\n                          {{ loginErrorMsg }}\n                        </v-alert>\n                        <v-btn\n                          :disabled=\"!login_valid\"\n                          color=\"blue darken-3\"\n                          class=\"my-4 white--text\"\n                          @click=\"email_login\"\n                        >\n                          ログイン\n                        </v-btn>\n                      </v-form>\n                    </v-card-text>\n                  </v-card>\n                </v-col>\n              </v-row>\n              <v-divider class=\"my-8\" />\n              <v-row>\n                <v-col sm=\"12\">\n                  <h2 class=\"text-center subtitle-1 font-weight-bold mb-2\">\n                    その他のアカウントでログイン\n                  </h2>\n                </v-col>\n              </v-row>\n              <v-alert\n                v-if=\"socialLoginErrorMsg\"\n                dense\n                text\n                type=\"error\"\n                dismissible\n              >\n                {{ socialLoginErrorMsg }}\n              </v-alert>\n              <SocialLogin />\n            </v-col>\n          </v-row>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport Header from '../layouts/Header'\nimport SocialLogin from '../components/SocialLogin.vue'\n\nexport default {\n  components: {\n    Header,\n    SocialLogin,\n  },\n  layout: 'signin',\n  data() {\n    return {\n      tab: null,\n      login_valid: true,\n      login_email: '',\n      login_password: '',\n      show_loginpassword: false,\n      loginErrorMsg: '',\n      socialLoginErrorMsg: '',\n    }\n  },\n  methods: {\n    email_login() {\n      this.$store\n        .dispatch('signInWithEmail', {\n          email: this.login_email,\n          password: this.login_password,\n        })\n        .then(() => {\n          this.login_email = ''\n          this.login_password = ''\n          this.$router.push({\n            name: 'index',\n          })\n        })\n        .catch((err) => {\n          console.log(err)\n          if (err.code === 'auth/user-disabled') {\n            this.loginErrorMsg = 'このアカウントはロックされています。'\n          } else {\n            this.loginErrorMsg =\n              'メールアドレスまたはパスワードが間違っています。'\n          }\n        })\n    },\n  },\n}\n</script>\n\n<style scoped>\n>>> .v-application--wrap {\n  min-height: 0;\n}\n.form {\n  padding: 0.5em 1em;\n  margin: 2em 0;\n  background: -webkit-repeating-linear-gradient(\n    -45deg,\n    #f0f8ff,\n    #f0f8ff 3px,\n    #e9f4ff 3px,\n    #e9f4ff 7px\n  );\n  background: repeating-linear-gradient(\n    -45deg,\n    #f0f8ff,\n    #f0f8ff 3px,\n    #e9f4ff 3px,\n    #e9f4ff 7px\n  );\n}\n.form p {\n  margin: 0;\n  padding: 0;\n}\n</style>\n","/Users/macbookpro/Documents/TimeOverGrow-new/pages/register.vue",["108"],"<template>\n  <v-app>\n    <Header :logout=\"false\" :humbargarmenu=\"false\" />\n    <v-spacer></v-spacer>\n    <v-container class=\"mt-8\">\n      <v-row justify=\"center\">\n        <v-col cols=\"10\" sm=\"8\" md=\"6\" class=\"form\">\n          <h2 class=\"text-center subtitle-1 font-weight-bold mb-2\">\n            メールアドレスで登録\n          </h2>\n          <v-row>\n            <v-col>\n              <v-tabs\n                v-model=\"tab\"\n                background-color=\"transparent\"\n                color=\"blue accent-2\"\n                grow\n                class=\"mb-3\"\n              >\n                <v-tab to=\"/login\"> ログイン </v-tab>\n                <v-tab to=\"/register\"> アカウント登録 </v-tab>\n              </v-tabs>\n              <v-row>\n                <v-col sm=\"12\">\n                  <v-card flat class=\"pa-5\">\n                    <v-card-text class=\"pa-0\">\n                      <v-form\n                        ref=\"register_form\"\n                        v-model=\"register_valid\"\n                        lazy-validation\n                      >\n                        <v-text-field\n                          v-model=\"register_email\"\n                          label=\"メールアドレス\"\n                          :rules=\"emailRules\"\n                          required\n                          validate-on-blur\n                        />\n                        <v-text-field\n                          ref=\"register_password\"\n                          v-model=\"register_password\"\n                          label=\"パスワード\"\n                          required\n                          :append-icon=\"\n                            show_registerPassword ? 'mdi-eye' : 'mdi-eye-off'\n                          \"\n                          :type=\"show_registerPassword ? 'text' : 'password'\"\n                          :rules=\"register_passwordRules\"\n                          validate-on-blur\n                          loading\n                          @click:append=\"\n                            show_registerPassword = !show_registerPassword\n                          \"\n                        >\n                          <template #progress>\n                            <v-progress-linear\n                              :value=\"score.value\"\n                              :color=\"score.color\"\n                              absolute\n                              height=\"2\"\n                            />\n                          </template>\n                        </v-text-field>\n                        <v-text-field\n                          v-model=\"register_password_again\"\n                          label=\"パスワード（確認）\"\n                          required\n                          :append-icon=\"\n                            show_registerPassword ? 'mdi-eye' : 'mdi-eye-off'\n                          \"\n                          :type=\"show_registerPassword ? 'text' : 'password'\"\n                          validate-on-blur\n                          :rules=\"register_passwordAgainRules\"\n                          @click:append=\"\n                            show_registerPassword = !show_registerPassword\n                          \"\n                        />\n                        <v-alert\n                          v-if=\"registerErrorMsg\"\n                          dense\n                          text\n                          type=\"error\"\n                        >\n                          {{ registerErrorMsg }}\n                        </v-alert>\n                        <v-btn\n                          :disabled=\"!register_valid\"\n                          color=\"blue darken-3\"\n                          class=\"mr-4 white--text\"\n                          @click=\"email_register\"\n                        >\n                          登録\n                        </v-btn>\n                      </v-form>\n                    </v-card-text>\n                  </v-card>\n                </v-col>\n              </v-row>\n              <v-divider class=\"my-8\" />\n              <v-row>\n                <v-col sm=\"12\">\n                  <h2 class=\"text-center subtitle-1 font-weight-bold mb-2\">\n                    その他のアカウントでログイン\n                  </h2>\n                </v-col>\n              </v-row>\n              <SocialLogin />\n            </v-col>\n          </v-row>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport zxcvbn from 'zxcvbn'\nimport Header from '../layouts/Header'\nimport SocialLogin from '../components/SocialLogin.vue'\n\nexport default {\n  components: {\n    Header,\n    SocialLogin,\n  },\n  layout: 'signin',\n  data() {\n    return {\n      registerErrorMsg: '',\n      tab: null,\n      register_valid: true,\n      register_email: '',\n      register_password: '',\n      register_password_again: '',\n      emailRules: [\n        (v) => {\n          if (v) {\n            return (\n              /.+@.+\\..+/.test(v) || '有効なメールアドレスを入力してください'\n            )\n          } else {\n            return true\n          }\n        },\n      ],\n      register_passwordRules: [\n        (v) => !!v || 'パスワードを入力してください',\n        (v) =>\n          zxcvbn(v).score >= 3 ||\n          '大文字・小文字・数字・記号を混ぜた強いパスワードにしてください',\n      ],\n      register_passwordAgainRules: [\n        (v) => {\n          if (v) {\n            return (\n              this.$refs.register_password.value === v ||\n              'パスワードと一致しません'\n            )\n          } else {\n            return true\n          }\n        },\n      ],\n      show_registerPassword: false,\n    }\n  },\n  computed: {\n    progress() {\n      return this.score.value\n    },\n    score() {\n      const result = zxcvbn(this.register_password)\n      switch (result.score) {\n        case 4:\n          return {\n            color: 'green',\n            value: 100,\n          }\n        case 3:\n          return {\n            color: 'light-green lighten-1',\n            value: 75,\n          }\n        case 2:\n          return {\n            color: 'amber accent-2',\n            value: 50,\n          }\n        case 1:\n          return {\n            color: 'deep-orange lighten-1',\n            value: 25,\n          }\n        default:\n          return {\n            color: 'red darken-3',\n            value: 0,\n          }\n      }\n    },\n  },\n  methods: {\n    email_register() {\n      if (this.$refs.register_form.validate()) {\n        this.$store\n          .dispatch('signUp', {\n            email: this.register_email,\n            password: this.register_password,\n          })\n          .then(() => {\n            this.register_email = ''\n            this.register_password = ''\n            this.$router.push({\n              name: 'index',\n              params: {\n                dashboard_msg: true,\n                dashboard_msg_text: 'アカウントの登録が完了しました。',\n              },\n            })\n          })\n          .catch((err) => {\n            console.log(err)\n            if (err.code === 'auth/email-already-in-use') {\n              this.registerErrorMsg =\n                'このメールアドレスは既に登録されています。'\n            } else if (err.code === 'auth/invalid-email') {\n              this.registerErrorMsg = '無効なメールアドレスです。'\n            } else {\n              this.registerErrorMsg = 'エラーにより登録できませんでした。'\n            }\n          })\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n>>> .v-application--wrap {\n  min-height: 0;\n}\n.form {\n  padding: 0.5em 1em;\n  margin: 2em 0;\n  background: -webkit-repeating-linear-gradient(\n    -45deg,\n    #f0f8ff,\n    #f0f8ff 3px,\n    #e9f4ff 3px,\n    #e9f4ff 7px\n  );\n  background: repeating-linear-gradient(\n    -45deg,\n    #f0f8ff,\n    #f0f8ff 3px,\n    #e9f4ff 3px,\n    #e9f4ff 7px\n  );\n}\n.form p {\n  margin: 0;\n  padding: 0;\n}\n</style>\n","/Users/macbookpro/Documents/TimeOverGrow-new/pages/MyPage.vue",["109","110","111"],"<template>\n  <v-app>\n    <Header>\n      <v-list-item text>\n        <nuxt-link to=\"/\" class=\"d-flex auth\">\n          <v-list-item-icon>\n            <v-icon>mdi-reply-all</v-icon>\n          </v-list-item-icon>\n          <v-list-item-title style=\"display: block\"\n            >アプリへ戻る</v-list-item-title\n          >\n        </nuxt-link>\n      </v-list-item>\n    </Header>\n    <v-container class=\"pa-0\">\n      <v-row cols=\"7\" sm=\"7\" md=\"4\" class=\"container\">\n        <v-col>\n          <v-card :elevation=\"10\" class=\"mt-5 p-5\">\n            <Chart\n              :chart-data=\"TagBarChartData\"\n              :options=\"TagBarChartOptions\"\n              class=\"m-2 pa-4\"\n            />\n          </v-card>\n          <v-card :elevation=\"10\" class=\"mt-5 p-5\">\n            <!-- <Chart :chart-data=\"TimeBarChartData\" :options=\"TimeBarChartOptions\" class=\"m-2 pa-4\" /> -->\n            <CalendarHeatmap\n              :values=\"heartmapData\"\n              :end-date=\"endData\"\n              :max=\"5\"\n              tooltip-unit=\"点\"\n              class=\"ma-10 py-4\"\n            >\n            </CalendarHeatmap>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport { CalendarHeatmap } from 'vue-calendar-heatmap'\nimport ChartDataLabels from 'chartjs-plugin-datalabels'\nimport Chart from '../components/Chart'\nimport 'chartjs-plugin-colorschemes'\nimport Header from '../layouts/Header'\nimport firebase, { dbMessages, dbTags } from '../plugins/firebase'\n// import MessageModel from '../models/Message';\n\nexport default {\n  components: {\n    Header,\n    Chart,\n    CalendarHeatmap,\n  },\n  data() {\n    return {\n      vuechartData: [],\n      TagBarChartData: {\n        // ↓にtagの名前を格納\n        labels: [],\n        datasets: [\n          {\n            label: ['学習時間'],\n            // ↓にtagのデータを格納\n            data: [],\n            // ↓にtagの色を格納\n            // backgroundColor: [],\n            // borderColor: []\n          },\n        ],\n      },\n      TagBarChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          colorschemes: {\n            scheme: 'brewer.Paired12',\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              scaleLabel: {\n                display: true,\n                labelString: '',\n              },\n            },\n          ],\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                max: 500,\n                stepSize: 50,\n                callback(label) {\n                  return label + ' h'\n                },\n              },\n            },\n          ],\n        },\n        tooltips: {\n          callbacks: {\n            label(tooltipItem) {\n              return tooltipItem.yLabel + ' h'\n            },\n          },\n        },\n      },\n      TimeBarChartData: {\n        // ↓にtagの名前を格納\n        labels: [],\n        datasets: [\n          {\n            label: ['学習時間'],\n            // ↓にtagのデータを格納\n            data: [],\n            // ↓にtagの色を格納\n            // backgroundColor: [],\n            // borderColor: []\n          },\n        ],\n      },\n      TimeBarChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          colorschemes: {\n            scheme: 'brewer.Paired12',\n            // custom: customColorFunction\n          },\n          ChartDataLabels,\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              scaleLabel: {\n                display: true,\n                labelString: '',\n              },\n            },\n          ],\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                max: 500,\n                stepSize: 50,\n                callback(label) {\n                  return label + ' h'\n                },\n              },\n            },\n          ],\n        },\n        tooltips: {\n          callbacks: {\n            label(tooltipItem) {\n              return tooltipItem.yLabel + ' h'\n            },\n          },\n        },\n      },\n      heartmapData: [],\n      // 空白だとエラー発生\n      endData: '2021-01-1',\n      timeCount: 5,\n    }\n  },\n  async created() {\n    await this.tagChart()\n    await this.hearmap()\n  },\n  methods: {\n    async tagChart() {\n      const uid = firebase.auth().currentUser.uid\n      const TagCollection = await dbTags.where('uid', '==', uid).get()\n      TagCollection.docs.map((e) => {\n        this.TagBarChartData.labels.push(e.data().text)\n        this.TagBarChartData.datasets[0].data.push(e.data().time)\n      })\n      this.TagBarChartData = {\n        labels: this.TagBarChartData.labels,\n        datasets: [\n          {\n            label: ['学習時間'],\n            data: this.TagBarChartData.datasets[0].data,\n          },\n        ],\n      }\n    },\n    async hearmap() {\n      const uid = firebase.auth().currentUser.uid\n      const messageData = await dbMessages.where('uid', '==', uid).get()\n      const messagesDate = messageData.docs.map((doc) => {\n        // console.log(doc.data().times);\n        let timeData = doc.data().times\n        if (timeData <= 1) {\n          timeData = 1\n        } else if (timeData <= 3) {\n          timeData = 2\n        } else if (timeData <= 5) {\n          timeData = 3\n        } else if (timeData <= 8) {\n          timeData = 4\n        } else if (timeData > 8) {\n          timeData = 5\n        }\n        this.timeCount = timeData\n        return { date: doc.data().date.seconds * 1000, count: this.timeCount }\n      })\n      // console.log(messagesDate);\n\n      this.heartmapData = messagesDate\n\n      // endData\n      const today = new Date()\n      const Year = new Date(today.setFullYear(today.getFullYear()))\n      this.endData = Year\n      // this.startData = Year;\n\n      // console.log(this.heartmapData);\n    },\n  },\n}\n</script>\n\n<style scoped>\n>>> .v-application--wrap {\n  min-height: 0;\n}\n.auth {\n  text-decoration: none;\n  color: inherit;\n}\n</style>\n","/Users/macbookpro/Documents/TimeOverGrow-new/components/SocialLogin.vue",["112"],"<template>\n  <v-row justify=\"center\">\n    <v-col cols=\"12\" sm=\"10\" md=\"10\">\n      <v-card class=\"login\">\n        <v-btn\n          block\n          class=\"color text-capitalize mb-2\"\n          height=\"50px\"\n          @click=\"googleLogin\"\n        >\n          <span class=\"color-google__icon v-icon notranslate v-icon--left\">\n            <svg\n              enable-background=\"new 0 0 46 46\"\n              viewBox=\"0 0 46 46\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <g transform=\"translate(14 14)\">\n                <g clip-rule=\"evenodd\" fill-rule=\"evenodd\">\n                  <path\n                    d=\"m31.1 9.5c0-1.6-.1-3.2-.4-4.7h-21.7v8.9h12.4c-.5 2.9-2.2 5.3-4.6 6.9v5.8h7.4c4.4-4 6.9-9.9 6.9-16.9z\"\n                    fill=\"#4285f4\"\n                  />\n                  <path\n                    d=\"m9 32c6.2 0 11.4-2.1 15.2-5.6l-7.4-5.8c-2.1 1.4-4.7 2.2-7.8 2.2-6 0-11.1-4-12.9-9.5h-7.7v6c3.8 7.5 11.6 12.7 20.6 12.7z\"\n                    fill=\"#34a853\"\n                  />\n                  <path\n                    d=\"m-3.9 13.4c-.4-1.4-.7-2.9-.7-4.4s.3-3 .7-4.4v-6h-7.7c-1.5 3.2-2.4 6.7-2.4 10.4s.9 7.2 2.4 10.3z\"\n                    fill=\"#fbbc05\"\n                  />\n                  <path\n                    d=\"m9-4.9c3.4 0 6.4 1.2 8.8 3.4l6.6-6.5c-4-3.7-9.2-6-15.4-6-9 0-16.8 5.2-20.6 12.7l7.7 6c1.8-5.5 6.9-9.6 12.9-9.6z\"\n                    fill=\"#ea4335\"\n                  />\n                </g>\n                <path d=\"m-14-14h46v46h-46z\" fill=\"none\" />\n              </g>\n            </svg>\n          </span>\n          Googleアカウントでログイン\n        </v-btn>\n      </v-card>\n      <v-card class=\"login\">\n        <v-btn\n          block\n          class=\"mb-2 mt-5 color text-capitalize\"\n          height=\"50px\"\n          @click=\"guestLogin\"\n        >\n          <v-icon class=\"notranslate v-icon--left theme--light\">\n            mdi-account </v-icon\n          >ゲストログイン\n        </v-btn>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\n// import { auth } from '~/plugins/firebase.js';\n\nexport default {\n  methods: {\n    googleLogin() {\n      this.$store\n        .dispatch('signInWithGoogle')\n        .then(() => {\n          this.$router.push({\n            name: 'index',\n          })\n        })\n        .catch(() => {\n          this.$parent.socialLoginErrorMsg =\n            '現在Googleでのログインは使用できません。後ほどお試しください。'\n        })\n    },\n    // googleLogin() {\n    // \tthis.$store\n    // \t\t.dispatch('signInWithGoogle')\n    // \t\t.then(() => {\n    // \t\t\tthis.$router.push({\n    // \t\t\t\tname: 'index'\n    // \t\t\t});\n    // \t\t})\n    // \t\t.catch(() => {\n    // \t\t\tconsole.error('現在Googleでのログインは使用できません。後ほどお試しください。');\n    // \t\t});\n    // },\n    guestLogin() {\n      this.$store\n        .dispatch('signInWithGuest')\n        .then(() => {\n          this.$router.push({\n            name: 'index',\n          })\n        })\n        .catch(() => {\n          console.error(\n            '現在ゲストログインは使用できません。後ほどお試しください。'\n          )\n        })\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@mixin social_button($brand-color: #999, $text-color: #fff) {\n  background-color: $brand-color !important;\n  border-color: $brand-color;\n  color: $text-color;\n\n  @at-root {\n    #{&}__icon {\n      position: absolute;\n      left: 0;\n    }\n  }\n}\n\n.color {\n  @include social_button(#fff, #757575);\n  @at-root {\n    #{&}__icon > svg {\n      position: absolute;\n    }\n  }\n}\n</style>\n","/Users/macbookpro/Documents/TimeOverGrow-new/components/Chart.vue",[],"/Users/macbookpro/Documents/TimeOverGrow-new/components/Main.vue",["113","114","115","116","117","118","119","120","121","122"],"<template>\n  <v-app>\n    <v-container class=\"pa-0 col\">\n      <v-row class=\"pa-0 col\">\n        <v-spacer v-if=\"$vuetify.breakpoint.smAndUp\" />\n        <!-- <v-spacer></v-spacer> -->\n        <v-col cols=\"12\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"4\" class=\"col mx-2 mt-5\">\n          <TotalTime :times=\"times\" />\n          <v-card :elevation=\"10\" class=\"mt-5 py-5\">\n            <Chart\n              :chart-data=\"BarChartData\"\n              :options=\"BarChartOptions\"\n              class=\"pa-3\"\n            />\n          </v-card>\n        </v-col>\n        <v-col cols=\"12\" sm=\"4\" md=\"4\" lg=\"4\" xl=\"4\" class=\"col mx-2 mt-5\">\n          <v-card :elevation=\"10\" class=\"pa-5\">\n            <TextBox :on-click=\"add\" />\n            <h2 v-if=\"messages.length === 0\" class=\"pa-5\">\n              投稿が0件です！！！\n            </h2>\n          </v-card>\n          <MessageList\n            :messages=\"reversedMessages\"\n            @pop=\"clear\"\n            @update=\"updated\"\n            @updatedDate=\"updatedDateId\"\n          />\n          <!-- dialogの設定 -->\n          <div justify=\"center\">\n            <v-dialog v-model=\"dialog\" persistent max-width=\"600\">\n              <v-card>\n                <DialogEdit\n                  :update-time.sync=\"updateTime\"\n                  :update-select.sync=\"updateSelect\"\n                  :update-body.sync=\"updateBody\"\n                  class=\"container\"\n                  @updatedDate=\"updatedDate\"\n                >\n                  <v-icon color=\"green darken-1\"> 更新する </v-icon>\n                </DialogEdit>\n                <v-card-actions>\n                  <v-btn color=\"green darken-1\" text @click=\"back\">\n                    戻る\n                  </v-btn>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n          </div>\n          <!-- ここまで -->\n        </v-col>\n        <v-spacer v-if=\"$vuetify.breakpoint.smAndUp\" />\n      </v-row>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport MessageModel from '../models/Message'\nimport firebase, { dbMessages, dbTags } from '../plugins/firebase'\nimport TotalTime from './TotalTime'\nimport Chart from './Chart'\nimport TextBox from './TextBox'\n// import Spinner from './Spinner';\nimport MessageList from './MessageList'\nimport DialogEdit from './DialogEdit'\n\nexport default {\n  components: {\n    TotalTime,\n    Chart,\n    TextBox,\n    // Spinner,\n    MessageList,\n    DialogEdit,\n  },\n  data() {\n    return {\n      indexId: '',\n      updateTime: 0,\n      updateSelect: [],\n      updateBody: '',\n      editTagData: [],\n      dialog: false,\n      num: 0,\n      name: '',\n      index: '',\n      done: false,\n      messages: [],\n      vuechartData: [],\n      times: 0,\n      initialLoaded: false,\n      // Max: 300,\n      // Step: 1,\n      BarChartData: {\n        labels: ['学習時間'],\n        datasets: [\n          {\n            label: ['学習時間'],\n            data: [],\n            backgroundColor: ['rgba(54, 162, 235, 0.2)'],\n            borderColor: ['rgba(54, 162, 235, 1)'],\n          },\n        ],\n      },\n      BarChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              scaleLabel: {\n                display: true,\n                labelString: '',\n              },\n            },\n          ],\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                max: [30],\n                stepSize: [3],\n                callback(label) {\n                  return label + ' h'\n                },\n              },\n            },\n          ],\n        },\n        tooltips: {\n          callbacks: {\n            label(tooltipItem) {\n              return tooltipItem.yLabel + ' h'\n            },\n          },\n        },\n      },\n    }\n  },\n  computed: {\n    reversedMessages() {\n      return this.messages.slice().reverse()\n    },\n  },\n  async created() {\n    const messages = await this.fetchMessages()\n    const times = await this.totalTime()\n    const vuechartData = await this.getChart()\n    this.messages = messages\n    this.times = times\n    if (this.BarChartData.datasets[0].data.length === 0) {\n      this.BarChartData.datasets[0].data.push(vuechartData[0])\n    }\n    this.BarChartData.datasets[0].data[0] = vuechartData[0]\n    this.initialLoaded = true\n\n    await this.timeScales()\n  },\n  methods: {\n    // Chart図のメモリ変更処理\n    async timeScales() {\n      const totalTime = await MessageModel.dbtime()\n      let max = this.BarChartOptions.scales.yAxes[0].ticks.max\n      let step = this.BarChartOptions.scales.yAxes[0].ticks.stepSize\n\n      max = JSON.parse(JSON.stringify(max))\n      step = JSON.parse(JSON.stringify(step))\n\n      if (totalTime < 30) {\n        max.push(30)\n        step.push(3)\n      }\n      console.log(totalTime) // 31\n      if (totalTime >= 30) {\n        console.log(max) // [30]\n        console.log(step) // [3]\n\n        max.pop()\n        step.pop()\n        max.push(50)\n        step.push(5)\n        // max[0] = 50;\n        // step[0] = 5;\n\n        console.log(max) // [50]\n        console.log(step) // [5]\n      }\n    },\n    add(message) {\n      this.messages.push(message)\n      this.times += message.times\n      const chartdbtime = message.times\n      if (this.BarChartData.datasets[0].data.length === 0) {\n        this.BarChartData.datasets[0].data.push(chartdbtime)\n      }\n      this.BarChartData.datasets[0].data[0] += chartdbtime\n      // もう1度作り直さないといけない。\n      this.BarChartData = {\n        datasets: [\n          {\n            label: ['学習時間'],\n            data: [(this.vuechartData[0] += chartdbtime)],\n            backgroundColor: ['rgba(54, 162, 235, 0.2)'],\n            borderColor: ['rgba(54, 162, 235, 1)'],\n          },\n        ],\n      }\n      // this.timeScales();\n    },\n    async clear() {\n      this.messages = await this.fetchMessages()\n      this.times = await this.totalTime()\n      this.vuechartData[0] = await MessageModel.dbtime()\n      this.BarChartData = {\n        datasets: [\n          {\n            label: ['学習時間'],\n            data: [this.vuechartData[0]],\n            backgroundColor: ['rgba(54, 162, 235, 0.2)'],\n            borderColor: ['rgba(54, 162, 235, 1)'],\n          },\n        ],\n      }\n    },\n    back() {\n      this.dialog = false\n      this.editTagData = []\n    },\n    // ここで選択した投稿IDを取得し、bodyを入力。\n    async updated(docId) {\n      this.dialog = true\n      const editId = await dbMessages.doc(docId).get()\n      const editData = editId.data()\n      this.editTagData = editData.tags\n      // dialogにtag表示の記述\n      // let newTagData = [];\n      // editData.tags.map(tagData => {\n      // \tnewTagData.push(tagData.text);\n      // \treturn newTagData;\n      // });\n\n      // クリックしたtagのdata取得。\n      // console.log(editData.tags);\n\n      // console.log(newTagData);\n      // console.log();\n\n      this.updateTime = parseInt(editData.times)\n      this.updateBody = editData.bodys\n      // this.updateSelect = newTagData;\n    },\n    async updatedDateId(docId) {\n      const editId = await dbMessages.doc(docId).get()\n      this.indexId = editId.id\n\n      // editId.idは、選択したdocId\n      // 一度indexIdへ渡すことで取り出せる様にしてる。\n    },\n    // 編集dialogで決定した際の挙動\n    async updatedDate() {\n      this.dialog = false\n\n      // 入力したtagの合計time値をthis.updateTimeへ入力(複数dataの時も考える)\n      let tagTime = 0\n      const tagText = []\n\n      this.updateSelect.map((Element) => {\n        tagText.push(Element.text)\n        tagTime += Element.time\n      })\n      this.updateTime = tagTime\n\n      // クリックしたtagのtime値をdbTagsからマイナス(複数dataの時も考える)\n      this.editTagData.map(async (Element) => {\n        Element = JSON.parse(JSON.stringify(Element))\n\n        const uid = firebase.auth().currentUser.uid\n        const sameTagText = await dbTags\n          .where('uid', '==', uid)\n          .where('text', '==', Element.text)\n          .get()\n        sameTagText.docs.map(async (doc) => {\n          // クリックした箇所の元々のdataとid\n          let sameTagTime = doc.data().time\n          sameTagTime -= Element.time\n\n          if (sameTagTime <= 0) {\n            await dbTags.doc(doc.id).delete()\n          } else {\n            await dbTags.doc(doc.id).update({\n              time: sameTagTime,\n            })\n          }\n          return doc.id, doc.data()\n        })\n      })\n\n      await dbMessages.doc(this.indexId).update({\n        times: this.updateTime,\n        tags: this.updateSelect,\n        bodys: this.updateBody,\n      })\n      ;(this.updateTime = 0),\n        (this.updateSelect = []),\n        (this.editTagData = []),\n        (this.updateBody = ''),\n        // フロントでdbを反映\n        this.clear()\n    },\n    async fetchMessages() {\n      try {\n        let messages = []\n        messages = await MessageModel.fetchMessages()\n        return messages\n      } catch (error) {\n        alert(error.message)\n      }\n    },\n    async totalTime() {\n      try {\n        let times = 0\n        const time = await MessageModel.dbtime()\n        times += time\n        return times\n      } catch (error) {\n        alert(error.message)\n      }\n    },\n    async getChart() {\n      try {\n        const chartdbtime = await MessageModel.dbtime()\n        if (this.BarChartData.datasets[0].data.length === 0) {\n          this.BarChartData.datasets[0].data.push(chartdbtime)\n        }\n        this.vuechartData[0] = chartdbtime\n        this.BarChartData.datasets[0].data[0] = chartdbtime\n        return this.vuechartData\n      } catch (error) {\n        alert(error.message)\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\nh2 {\n  position: relative;\n  padding: 0.6em;\n  background: #e0edff;\n}\n\nh2:after {\n  position: absolute;\n  content: '';\n  top: 100%;\n  left: 30px;\n  border: 15px solid transparent;\n  border-top: 15px solid #e0edff;\n  width: 0;\n  height: 0;\n}\n.col {\n  padding: 0;\n  margin: 0 auto;\n}\n.v-application .mx-2 {\n  margin: 0 auto;\n}\n</style>\n","/Users/macbookpro/Documents/TimeOverGrow-new/components/TextBox.vue",["123","124","125","126","127"],"<template>\n  <!-- eslint-disable -->\n\t<v-app class=\"ma-0\">\n\t\t<v-container class=\"textbox-container\">\n\t\t\t<h2>今日のアウトプット内容</h2>\n\t\t\t<v-container fluid class=\"px-0 mt-3\">\n\t\t\t\t<v-combobox\n\t\t\t\t\tv-model=\"select\"\n\t\t\t\t\t:filter=\"filter\"\n\t\t\t\t\t:hide-no-data=\"!search\"\n\t\t\t\t\t:items=\"items\"\n\t\t\t\t\t:search-input.sync=\"search\"\n\t\t\t\t\tlight\n\t\t\t\t\tclass=\"form\"\n\t\t\t\t\tlabel=\"タグを入力してください。\"\n\t\t\t\t\thide-selected\n\t\t\t\t\tclearable\n\t\t\t\t\tappend-icon\n\t\t\t\t\tchips\n\t\t\t\t\tdeletable-chips\n\t\t\t\t\tmultiple\n\t\t\t\t\tsmall-chips\n\t\t\t\t\tsolo\n\t\t\t\t>\n\t\t\t\t\t<template v-slot:selection=\"{ attrs, item, parent, selected }\">\n\t\t\t\t\t\t<v-chip\n\t\t\t\t\t\t\tv-if=\"item === Object(item)\"\n\t\t\t\t\t\t\tv-bind=\"attrs\"\n\t\t\t\t\t\t\t:input-value=\"selected\"\n\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t\tsmall\n\t\t\t\t\t\t\tcolor=\"tagcolor\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span class=\"tagcolor\">\n\t\t\t\t\t\t\t\t{{ item.text }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<v-icon\n\t\t\t\t\t\t\t\tsmall\n\t\t\t\t\t\t\t\t@click=\"\n\t\t\t\t\t\t\t\t\tparent.selectItem(item)\n\t\t\t\t\t\t\t\t\tclose(item)\n\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t>mdi-close</v-icon\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</v-chip>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:item=\"{ index, item }\" class=\"tagcolor\">\n\t\t\t\t\t\t<v-text-field\n\t\t\t\t\t\t\tv-if=\"editing === item\"\n\t\t\t\t\t\t\tv-model=\"editing.text\"\n\t\t\t\t\t\t\tautofocus\n\t\t\t\t\t\t\tflat\n\t\t\t\t\t\t\thide-details\n\t\t\t\t\t\t\tsolo\n\t\t\t\t\t\t\t@keyup.enter=\"edit(index, item)\"\n\t\t\t\t\t\t></v-text-field>\n\t\t\t\t\t\t<v-chip v-else label small class=\"tagcolor\">\n\t\t\t\t\t\t\t<span class=\"tagcolor pa-0 d-block\">{{ item.text }}</span>\n\t\t\t\t\t\t</v-chip>\n\t\t\t\t\t\t<v-spacer></v-spacer>\n\t\t\t\t\t\t<v-list-item-action @click.stop>\n\t\t\t\t\t\t\t<div class=\"d-flex\">\n\t\t\t\t\t\t\t\t<v-btn icon @click.stop.prevent=\"edit(index, item)\">\n\t\t\t\t\t\t\t\t\t<v-icon>{{\n\t\t\t\t\t\t\t\t\t\tediting !== item ? 'mdi-pencil' : 'mdi-check'\n\t\t\t\t\t\t\t\t\t}}</v-icon>\n\t\t\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t\t\t\t<v-btn\n\t\t\t\t\t\t\t\t\ticon\n\t\t\t\t\t\t\t\t\t@click=\"tagDelete(index, item)\"\n\t\t\t\t\t\t\t\t\tclass=\"color btn ml-2\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<v-icon> mdi-trash-can-outline </v-icon>\n\t\t\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</v-list-item-action>\n\t\t\t\t\t</template>\n\t\t\t\t</v-combobox>\n\t\t\t</v-container>\n\t\t\t<v-dialog v-model=\"dialog\" width=\"500\">\n\t\t\t\t<v-card>\n\t\t\t\t\t<v-card-title class=\"headline grey lighten-2\">\n\t\t\t\t\t\t学習時間を記入して下さい。\n\t\t\t\t\t</v-card-title>\n\t\t\t\t\t<input\n\t\t\t\t\t\tv-model=\"tagTimes\"\n\t\t\t\t\t\tclass=\"textbox-input mt-4\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmax=\"24\"\n\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\tplaceholder=\"3\"\n\t\t\t\t\t/>\n\t\t\t\t\t時間\n\t\t\t\t\t<v-card-text> </v-card-text>\n\t\t\t\t\t<v-divider></v-divider>\n\t\t\t\t\t<v-card-actions>\n\t\t\t\t\t\t<v-spacer></v-spacer>\n\t\t\t\t\t\t<Button color=\"primary\" text :on-click=\"tagTime\">決定</Button>\n\t\t\t\t\t</v-card-actions>\n\t\t\t\t</v-card>\n\t\t\t</v-dialog>\n\t\t\t<v-textarea\n\t\t\t\tv-model.trim=\"bodys\"\n\t\t\t\tclass=\"textbox-area\"\n\t\t\t\tlabel=\"JSの非同期処理(async,await)について学びました。\"\n\t\t\t\tflat\n\t\t\t\tauto-grow\n\t\t\t\toutlined\n\t\t\t\trows=\"1\"\n\t\t\t\trow-height=\"100\"\n\t\t\t/>\n\t\t\t<div v-if=\"btn\" class=\"button ma-0 pa-0\">\n\t\t\t\t<Button :on-click.stop=\"add\" class=\"ma-0\">\n\t\t\t\t\t<v-icon color=\"#70c2fd\" class=\"pa-5\"> mdi-send </v-icon>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</v-container>\n\t</v-app>\n</template>\n\n<script>\nimport MessageModel from '../models/Message'\nimport TagModel from '../models/Tag'\nimport firebase, { dbTags } from '../plugins/firebase'\nimport Button from './Button'\n\nexport default {\n  components: {\n    Button,\n  },\n  props: {\n    onClick: {\n      type: Function,\n      required: true,\n    },\n    btn: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      times: 0,\n      bodys: '',\n      tagTimes: 0,\n      canPost: true,\n      activator: null,\n      attach: null,\n      editing: null,\n      index: -1,\n      items: [{ header: 'タグを選択するか作成して下さい。' }],\n      menu: false,\n      select: [],\n      dbMessagesTags: [],\n      search: null,\n      dialog: false,\n    }\n  },\n  watch: {\n    select(val, prev) {\n      if (val.length === prev.length) return\n      this.select = Array.prototype.map.call(Object(val), (value) => {\n        if (typeof value === 'string') {\n          value = {\n            text: value,\n          }\n          this.items.push(value)\n        }\n        // ここでtag事の学習時間をdialogで入力させることができたらいいかも\n        this.dialogTime()\n        return value\n      })\n    },\n  },\n  async created() {\n    try {\n      const tags = await TagModel.get()\n      this.items = tags\n    } catch (error) {\n      console.error(error)\n    }\n  },\n  methods: {\n    async add() {\n      this.canPost = false\n      try {\n        const message = await MessageModel.save({\n          times: parseInt(this.times),\n          bodys: this.bodys,\n          tags: this.dbMessagesTags,\n        })\n\n        // dbTagsへの保存処理。\n        const uid = firebase.auth().currentUser.uid\n\n        const newSelect = JSON.parse(JSON.stringify(this.select))\n        this.select = newSelect\n\n        this.select.forEach(async (element) => {\n          const params = Object.assign(element, { uid })\n          const TagSame = await dbTags\n            .where('uid', '==', uid)\n            .where('text', '==', params.text)\n            .get()\n          if (TagSame.docs) {\n            let Tag = []\n            TagSame.docs.forEach((e) => {\n              Tag = []\n              Tag.push(e.id)\n            })\n\n            let TagData = await (await dbTags.doc(Tag[0]).get()).data()\n            // let TagTime = TagData.data();\n            if (TagData === undefined) {\n              TagData = []\n            }\n            const dbMessagesTagTime = TagSame.docs.map((doc) => {\n              return doc.data()\n            })\n\n            if (dbMessagesTagTime.length !== 0) {\n              params.time += await dbMessagesTagTime[0].time\n            }\n\n            await dbTags.doc(Tag[0]).set({\n              text: params.text,\n              time: params.time,\n              uid: params.uid,\n            })\n          }\n        })\n\n        this.onClick(message)\n        this.times = 0\n        this.bodys = ''\n        this.select = ''\n        this.dbMessagesTags = []\n      } catch (error) {\n        alert(error.message)\n      }\n      this.canPost = true\n    },\n    // tagの削除機能\n    async tagDelete(index, item) {\n      item = JSON.parse(JSON.stringify(item))\n      const tagData = await dbTags\n        .where('text', '==', item.text)\n        .where('time', '==', item.time)\n        .where('uid', '==', item.uid)\n        .get()\n\n      tagData.docs.map(async (Element) => {\n        await dbTags.doc(Element.id).delete()\n        return Element.id\n      })\n\n      // tag削除してもリアクティブな変更にならない。\n      // console.log('前');\n      // this.$forceUpdate();\n      // console.log(this.$forceUpdate());\n      // console.log('後');\n    },\n    close(item) {\n      this.times -= item.time\n    },\n    dialogTime() {\n      this.dialog = true\n    },\n    // dialog内の決定ボタンで発火\n    async tagTime() {\n      this.dialog = false\n      const uid = firebase.auth().currentUser.uid\n\n      Object.assign(\n        this.select[this.select.length - 1],\n        { time: parseInt(this.tagTimes) },\n        { uid }\n      )\n\n      Object.assign(this.dbMessagesTags, {\n        tags: this.select[this.select.length - 1],\n        uid,\n      })\n      this.select[this.select.length - 1] = JSON.parse(\n        JSON.stringify(this.select[this.select.length - 1])\n      )\n\n      this.dbMessagesTags.push(this.select[this.select.length - 1])\n\n      this.dbMessagesTags = this.dbMessagesTags.filter((item, index, array) => {\n        return (\n          array.findIndex((nextItem) => item.text === nextItem.text) === index\n        )\n      })\n\n      this.dbMessagesTags[this.dbMessagesTags.length - 1] = JSON.parse(\n        JSON.stringify(this.dbMessagesTags[this.dbMessagesTags.length - 1])\n      )\n\n      // 合計値を格納\n      this.times += parseInt(this.tagTimes)\n\n      this.tagTimes = 0\n    },\n    async edit(index, item) {\n      if (!this.editing) {\n        // ここで編集前のデータ削除\n        // const editBefore = await dbTags.where('text', '==', item.text).get();\n        // editBefore.docs.forEach(doc => {\n        // \tdbTags.doc(doc.id).delete();\n        // });\n        this.editing = item\n        this.index = index\n      } else {\n        this.editing = null\n        this.index = -1\n      }\n    },\n    filter(item, queryText, itemText) {\n      if (item.header) return false\n\n      const hasValue = (val) => (val != null ? val : '')\n\n      const text = hasValue(itemText)\n      const query = hasValue(queryText)\n\n      return text\n        .toString()\n        .toLowerCase()\n        .includes(query.toString().toLowerCase())\n    },\n  },\n}\n</script>\n\n<style scoped>\n.textbox-input {\n  margin: 0;\n  padding: 3px 10px;\n  border: 1px solid rgb(161, 161, 161);\n  -webkit-appearance: none;\n}\nh2 {\n  color: #6cb4e4;\n  text-align: center;\n  padding: 0.25em;\n  border-top: solid 2px #6cb4e4;\n  border-bottom: solid 2px #6cb4e4;\n  background: -webkit-repeating-linear-gradient(\n    -45deg,\n    #f0f8ff,\n    #f0f8ff 3px,\n    #e9f4ff 3px,\n    #e9f4ff 7px\n  );\n}\n.textbox-area {\n  resize: none;\n  background: white;\n  border-radius: 5px;\n  padding: 0;\n  margin: 0;\n}\n.button {\n  margin-right: 20px;\n  text-align: right;\n  padding: 10px;\n  color: #70c2fd;\n}\n\n.tagcolor,\n.theme--light.v-chip:not(.v-chip--active) {\n  background: #a8ff78; /* fallback for old browsers */\n  background: -webkit-linear-gradient(\n    to right,\n    #78ffd6,\n    #a8ff78\n  ); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(\n    to right,\n    #78ffd6,\n    #a8ff78\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n}\n.v-card > *:last-child:not(.v-btn):not(.v-chip) {\n  margin: 0;\n}\n</style>\n","/Users/macbookpro/Documents/TimeOverGrow-new/components/TotalTime.vue",[],"/Users/macbookpro/Documents/TimeOverGrow-new/components/MessageList.vue",[],"/Users/macbookpro/Documents/TimeOverGrow-new/components/DialogEdit.vue",["128","129","130","131","132"],"<template>\n  <!-- eslint-disable -->\n\t<div class=\"textbox-container\">\n\t\t<div class=\"d-flex justify-space-between\">\n\t\t\t<div>\n\t\t\t\t<p>今日のアウトプット内容</p>\n\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t<v-dialog v-model=\"EditDialog\" width=\"500\">\n\t\t\t\t\t\t<v-card>\n\t\t\t\t\t\t\t<v-card-title class=\"headline grey lighten-2\">\n\t\t\t\t\t\t\t\t学習時間を記入して下さい。\n\t\t\t\t\t\t\t</v-card-title>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tv-model=\"tagTimes\"\n\t\t\t\t\t\t\t\tclass=\"textbox-input ml-4 mt-4\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmax=\"24\"\n\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\tplaceholder=\"3\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t時間\n\t\t\t\t\t\t\t<v-card-text> </v-card-text>\n\t\t\t\t\t\t\t<v-divider></v-divider>\n\t\t\t\t\t\t\t<v-card-actions>\n\t\t\t\t\t\t\t\t<v-spacer></v-spacer>\n\t\t\t\t\t\t\t\t<Button color=\"primary\" text :on-click=\"tagTime\">決定</Button>\n\t\t\t\t\t\t\t</v-card-actions>\n\t\t\t\t\t\t</v-card>\n\t\t\t\t\t</v-dialog>\n\t\t\t\t</div>\n\t\t\t\t<v-container fluid class=\"pl-0\">\n\t\t\t\t\t<v-combobox\n\t\t\t\t\t\tv-model=\"updatedSelect\"\n\t\t\t\t\t\t:filter=\"filter\"\n\t\t\t\t\t\t:hide-no-data=\"!search\"\n\t\t\t\t\t\t:items=\"items\"\n\t\t\t\t\t\t:search-input.sync=\"search\"\n\t\t\t\t\t\tlabel=\"タグを入力してください。\"\n\t\t\t\t\t\thide-selected\n\t\t\t\t\t\toutlined\n\t\t\t\t\t\tappend-icon\n\t\t\t\t\t\tchips\n\t\t\t\t\t\tdeletable-chips\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\tsmall-chips\n\t\t\t\t\t\tsolo\n\t\t\t\t\t>\n\t\t\t\t\t\t<template v-slot:no-data>\n\t\t\t\t\t\t\t<v-list-item>\n\t\t\t\t\t\t\t\t<span class=\"subheading\">制作</span>\n\t\t\t\t\t\t\t\t<v-chip color=\"tagcolor\" label small>\n\t\t\t\t\t\t\t\t\t{{ search }}\n\t\t\t\t\t\t\t\t</v-chip>\n\t\t\t\t\t\t\t</v-list-item>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<template v-slot:selection=\"{ attrs, item, parent, selected }\">\n\t\t\t\t\t\t\t<v-chip\n\t\t\t\t\t\t\t\tv-if=\"item === Object(item)\"\n\t\t\t\t\t\t\t\tv-bind=\"attrs\"\n\t\t\t\t\t\t\t\tcolor=\"tagcolor\"\n\t\t\t\t\t\t\t\t:input-value=\"selected\"\n\t\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t\t\tsmall\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class=\"pr-2\">\n\t\t\t\t\t\t\t\t\t{{ item.text }}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<v-icon small @click=\"parent.selectItem(item)\"\n\t\t\t\t\t\t\t\t\t>mdi-close</v-icon\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</v-chip>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<template v-slot:item=\"{ index, item }\">\n\t\t\t\t\t\t\t<v-text-field\n\t\t\t\t\t\t\t\tv-if=\"editing === item\"\n\t\t\t\t\t\t\t\tv-model=\"editing.text\"\n\t\t\t\t\t\t\t\tautofocus\n\t\t\t\t\t\t\t\tflat\n\t\t\t\t\t\t\t\tbackground-color=\"transparent\"\n\t\t\t\t\t\t\t\thide-details\n\t\t\t\t\t\t\t\tsolo\n\t\t\t\t\t\t\t\t@keyup.enter=\"edit(index, item)\"\n\t\t\t\t\t\t\t></v-text-field>\n\t\t\t\t\t\t\t<v-chip v-else color=\"tagcolor\" label small>\n\t\t\t\t\t\t\t\t{{ item.text }}\n\t\t\t\t\t\t\t</v-chip>\n\t\t\t\t\t\t\t<v-spacer></v-spacer>\n\t\t\t\t\t\t\t<v-list-item-action @click.stop>\n\t\t\t\t\t\t\t\t<v-btn icon @click.stop.prevent=\"edit(index, item)\">\n\t\t\t\t\t\t\t\t\t<v-icon>{{\n\t\t\t\t\t\t\t\t\t\tediting !== item ? 'mdi-pencil' : 'mdi-check'\n\t\t\t\t\t\t\t\t\t}}</v-icon>\n\t\t\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t\t\t</v-list-item-action>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</v-combobox>\n\t\t\t\t</v-container>\n\t\t\t</div>\n\t\t</div>\n\t\t<v-textarea\n\t\t\tv-model=\"updatedBody\"\n\t\t\tclass=\"textbox-area\"\n\t\t\tlabel=\"JSの非同期処理(async,await)について学びました。\"\n\t\t\tflat\n\t\t\tauto-grow\n\t\t\toutlined\n\t\t\trows=\"1\"\n\t\t\trow-height=\"100\"\n\t\t\tmax-width=\"100px\"\n\t\t/>\n\t\t<div class=\"button\">\n\t\t\t<Button :on-click=\"update\">\n\t\t\t\t<v-icon color=\"#70c2fd\"> mdi-send </v-icon>\n\t\t\t\t<slot />\n\t\t\t</Button>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport TagModel from '../models/Tag'\nimport firebase, { dbTags } from '../plugins/firebase'\nimport Button from '../components/Button'\n\nexport default {\n  components: {\n    Button,\n  },\n  props: {\n    // onClick: {\n    // \ttype: Function,\n    // \trequired: true\n    // },\n    updateTime: {\n      type: Number,\n      required: true,\n    },\n    updateSelect: {\n      type: Array,\n      required: true,\n    },\n    updateBody: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return {\n      times: 0,\n      bodys: '',\n      tagTimes: 0,\n      canPost: true,\n      activator: null,\n      editing: null,\n      index: -1,\n      items: [{ header: 'タグを選択するか作成して下さい。' }],\n      // updatedSelect: [],\n      dbMessagesTags: [],\n      menu: false,\n      search: null,\n      EditDialog: false,\n    }\n  },\n  computed: {\n    updatedTime: {\n      get() {\n        return this.updateTime\n      },\n      set(value) {\n        this.$emit('update:updateTime', value)\n      },\n    },\n    updatedSelect: {\n      get() {\n        return this.updateSelect\n      },\n      set(value) {\n        this.$emit('update:updateSelect', value)\n      },\n    },\n    updatedBody: {\n      get() {\n        return this.updateBody\n      },\n      set(value) {\n        this.$emit('update:updateBody', value)\n      },\n    },\n  },\n  watch: {\n    updatedSelect(val, prev) {\n      if (val.length === prev.length) return\n      this.updatedSelect = Array.prototype.map.call(Object(val), (value) => {\n        if (typeof value === 'string') {\n          value = {\n            // color: this.colors[this.nonce - 1],\n            text: value,\n          }\n          this.items.push(value)\n          // this.nonce++;\n        }\n        this.dialogTime()\n        return value\n      })\n    },\n  },\n  async created() {\n    try {\n      const tags = await TagModel.get()\n      this.items = tags\n    } catch (error) {\n      console.error(error)\n    }\n  },\n  methods: {\n    async update() {\n      // Number(this.updateTime);\n      this.$emit('updatedDate')\n      this.canPost = false\n      try {\n        const uid = firebase.auth().currentUser.uid\n        this.updatedSelect.forEach(async (element) => {\n          const params = Object.assign(element, { uid })\n          const TagSame = await dbTags\n            .where('uid', '==', uid)\n            .where('text', '==', params.text)\n            .get()\n          if (TagSame.docs) {\n            let Tag = []\n            TagSame.docs.forEach((e) => {\n              Tag = []\n              Tag.push(e.id)\n            })\n\n            let TagData = await (await dbTags.doc(Tag[0]).get()).data()\n            // let TagTime = TagData.data();\n            if (TagData === undefined) {\n              TagData = []\n            }\n            const dbMessagesTagTime = TagSame.docs.map((doc) => {\n              return doc.data()\n            })\n\n            if (dbMessagesTagTime.length !== 0) {\n              params.time += await dbMessagesTagTime[0].time\n            }\n\n            await dbTags.doc(Tag[0]).set({\n              text: params.text,\n              time: params.time,\n              uid: params.uid,\n            })\n          }\n        })\n      } catch (error) {\n        alert(error.message)\n      }\n      this.canPost = true\n    },\n    close(item) {\n      this.times -= item.time\n    },\n    dialogTime() {\n      this.EditDialog = true\n    },\n    // dialog内の決定ボタンで発火\n    async tagTime() {\n      this.EditDialog = false\n      const uid = firebase.auth().currentUser.uid\n\n      Object.assign(\n        this.updatedSelect[this.updatedSelect.length - 1],\n        { time: parseInt(this.tagTimes) },\n        { uid }\n      )\n\n      Object.assign(this.dbMessagesTags, {\n        tags: this.updatedSelect[this.updatedSelect.length - 1],\n        uid,\n      })\n      this.updatedSelect[this.updatedSelect.length - 1] = JSON.parse(\n        JSON.stringify(this.updatedSelect[this.updatedSelect.length - 1])\n      )\n\n      this.dbMessagesTags.push(\n        this.updatedSelect[this.updatedSelect.length - 1]\n      )\n\n      this.dbMessagesTags = this.dbMessagesTags.filter((item, index, array) => {\n        return (\n          array.findIndex((nextItem) => item.text === nextItem.text) === index\n        )\n      })\n\n      this.dbMessagesTags[this.dbMessagesTags.length - 1] = JSON.parse(\n        JSON.stringify(this.dbMessagesTags[this.dbMessagesTags.length - 1])\n      )\n\n      // 合計値を格納\n      this.times += parseInt(this.tagTimes)\n\n      this.tagTimes = 0\n    },\n    async edit(index, item) {\n      if (!this.editing) {\n        // ここで編集前のデータ削除\n        const editBefore = await dbTags.where('text', '==', item.text).get()\n        editBefore.docs.forEach((doc) => {\n          dbTags.doc(doc.id).delete()\n        })\n        this.editing = item\n        this.index = index\n      } else {\n        this.editing = null\n        this.index = -1\n      }\n    },\n    filter(item, queryText, itemText) {\n      if (item.header) return false\n\n      const hasValue = (val) => (val != null ? val : '')\n\n      const text = hasValue(itemText)\n      const query = hasValue(queryText)\n\n      return text\n        .toString()\n        .toLowerCase()\n        .includes(query.toString().toLowerCase())\n    },\n  },\n}\n</script>\n\n<style scoped>\n.textbox-input {\n  margin: 0;\n  padding: 3px 10px;\n  border: 1px solid rgb(161, 161, 161);\n  -webkit-appearance: none;\n}\n/* Chrome, Safari, Edge */\n.textbox-input::-webkit-outer-spin-button,\n.textbox-input::-webkit-inner-spin-button {\n  margin: 0;\n  -webkit-appearance: none;\n}\np {\n  font-weight: 900;\n  font-size: 25px;\n}\n.tagcolor,\n.theme--light.v-chip:not(.v-chip--active) {\n  background: #a8ff78; /* fallback for old browsers */\n  background: -webkit-linear-gradient(\n    to right,\n    #78ffd6,\n    #a8ff78\n  ); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(\n    to right,\n    #78ffd6,\n    #a8ff78\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n}\n.textbox-area {\n  max-width: 80%;\n  resize: none;\n  background: white;\n  width: 100%;\n  height: 100px;\n  border-radius: 5px;\n  padding: 0;\n  margin: 0;\n}\n.button {\n  margin-right: 50px;\n  text-align: right;\n  padding: 10px;\n  color: #70c2fd;\n}\n</style>\n","/Users/macbookpro/Documents/TimeOverGrow-new/components/Button.vue",[],"/Users/macbookpro/Documents/TimeOverGrow-new/components/Message.vue",["133","134","135"],"<template>\n  <v-card :elevation=\"10\" class=\"message mt-5 p-5\">\n    <div class=\"d-flex justify-space-between\" style=\"margin: 0 auto\">\n      <div>\n        <v-chip\n          v-for=\"(tags, index) in tag\"\n          :key=\"index\"\n          outlined\n          label\n          class=\"tag color ml-3 mb-3\"\n          style=\"min-width: 80px\"\n        >\n          <v-icon left class=\"color\"> mdi-check-outline </v-icon>\n          <span>{{ tags.text }}</span>\n        </v-chip>\n      </div>\n      <div class=\"d-flex\">\n        <Button small class=\"color btn ml-2\" :on-click=\"edit\">\n          <v-icon> mdi-lead-pencil </v-icon>\n        </Button>\n        <Button :on-click=\"clear\" class=\"color btn ml-2\">\n          <v-icon> mdi-trash-can-outline </v-icon>\n        </Button>\n      </div>\n    </div>\n    <p class=\"message-text mb-0 mr-3\">\n      <span>今日の学習時間は</span\n      ><span style=\"text-decoration: underline\">{{ times }}時間</span>\n    </p>\n    <p class=\"message-text mb-0\">\n      {{ bodys }}\n    </p>\n    <div class=\"message-date\">\n      {{ date }}\n    </div>\n  </v-card>\n</template>\n\n<script>\nimport MessageModel from '../models/Message'\nimport firebase, { dbMessages, dbTags } from '../plugins/firebase'\nimport Button from './Button'\n\nexport default {\n  components: {\n    Button,\n  },\n  props: {\n    times: {\n      type: Number,\n      required: true,\n    },\n    bodys: {\n      type: String,\n      required: true,\n    },\n    date: {\n      type: String,\n      required: true,\n    },\n    tag: {\n      type: Array,\n      required: true,\n    },\n    i: {\n      type: Number,\n      required: true,\n    },\n  },\n  methods: {\n    async clear() {\n      try {\n        const id = this.i\n        const docIds = await MessageModel.clear()\n        const Data = await dbMessages.doc(docIds[id]).get()\n\n        Data.data().tags.map(async (Element) => {\n          Element = JSON.parse(JSON.stringify(Element))\n\n          const uid = firebase.auth().currentUser.uid\n          const sameTagText = await dbTags\n            .where('uid', '==', uid)\n            .where('text', '==', Element.text)\n            .get()\n          sameTagText.docs.map(async (doc) => {\n            // クリックした箇所の元々のdataとid\n            let sameTagTime = doc.data().time\n            sameTagTime -= Element.time\n\n            if (sameTagTime <= 0) {\n              await dbTags.doc(doc.id).delete()\n            } else {\n              await dbTags.doc(doc.id).update({\n                time: sameTagTime,\n              })\n            }\n            return doc.id, doc.data()\n          })\n        })\n        if (docIds[id]) {\n          await dbMessages.doc(docIds[id]).delete()\n        }\n\n        // ここで強制リロード\n        this.$nextTick()\n\n        this.$emit('clear')\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async edit() {\n      const id = this.i\n      const docIds = await MessageModel.clear()\n      const docId = dbMessages.doc(docIds[id]).id\n      this.$emit('edit', docId)\n    },\n  },\n}\n</script>\n\n<style scoped>\n.tag {\n  background: #fff;\n  min-width: 80px;\n}\n.color {\n  color: #70c2fd;\n}\n.btn {\n  color: #70c2fd;\n}\n.btn:hover {\n  color: #0095ff;\n}\n.message {\n  min-height: 30px;\n  padding: 20px;\n  margin: 0;\n  padding: 0.4em 0.5em;\n  color: #494949;\n  background: #fff;\n  border-left: solid 5px #7db4e6;\n  border-bottom: solid 3px #d7d7d7;\n}\n.message-date {\n  font-size: 0.8em;\n  color: #777;\n  text-align: right;\n}\n</style>\n","/Users/macbookpro/Documents/TimeOverGrow-new/models/Message.js",["136","137"],"import firebase from 'firebase'\nimport { dbMessages } from '../plugins/firebase'\n\nclass Message {\n  constructor({ id, times, bodys, date, tags }) {\n    this.id = id\n    this.times = times\n    this.bodys = bodys\n    this.date = date\n    this.tags = tags\n  }\n\n  static async save({ times, bodys, tags }) {\n    // if (!times) {\n    // \tthrow new Error('入力欄が空欄です。');\n    // }\n\n    // if (!bodys || !bodys.trim()) {\n    // \tthrow new Error('入力欄が空欄です。');\n    // }\n\n    const uid = firebase.auth().currentUser.uid\n\n    const postData = {\n      times,\n      bodys,\n      date: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      tags,\n    }\n\n    const docRef = await dbMessages.add(postData)\n    const snapShot = await docRef.get()\n    const data = snapShot.data()\n    const model = this.create(docRef.id, data)\n\n    return model\n  }\n\n  static async clear() {\n    const clearId = []\n    const uid = firebase.auth().currentUser.uid\n    const collection = await dbMessages\n      .where('uid', '==', uid)\n      .orderBy('date')\n      .get()\n    try {\n      collection.forEach((doc) => {\n        clearId.unshift(doc.id)\n      })\n      return clearId\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  static async fetchMessages() {\n    const uid = firebase.auth().currentUser.uid\n    const collection = await dbMessages\n      .where('uid', '==', uid)\n      .orderBy('date')\n      .get()\n    if (collection.empty) {\n      return []\n    }\n\n    return collection.docs.map((doc) => {\n      return this.create(doc.id, doc.data())\n    })\n  }\n\n  static create(id, data) {\n    return new Message({\n      id,\n      times: data.times,\n      bodys: data.bodys,\n      date: data.date.toDate().toLocaleString(),\n      tags: data.tags,\n    })\n  }\n\n  static async dbtime() {\n    try {\n      const uid = firebase.auth().currentUser.uid\n      const querySnapshot = await dbMessages.where('uid', '==', uid).get()\n      let totaltime = 0\n      querySnapshot.forEach((postDoc) => {\n        totaltime += postDoc.data().times\n      })\n      return totaltime\n    } catch (error) {\n      console.error(error.message)\n    }\n  }\n}\n\nexport default Message\n","/Users/macbookpro/Documents/TimeOverGrow-new/models/Tag.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":127,"column":11,"nodeType":"142","messageId":"143","endLine":127,"endColumn":22},{"ruleId":"140","severity":1,"message":"141","line":222,"column":13,"nodeType":"142","messageId":"143","endLine":222,"endColumn":24},{"ruleId":"144","severity":1,"message":"145","line":180,"column":19,"nodeType":"142","endLine":180,"endColumn":32},{"ruleId":"146","severity":2,"message":"147","line":182,"column":34,"nodeType":"148","messageId":"149","endLine":182,"endColumn":36},{"ruleId":"144","severity":1,"message":"145","line":197,"column":19,"nodeType":"142","endLine":197,"endColumn":32},{"ruleId":"140","severity":1,"message":"141","line":98,"column":11,"nodeType":"142","messageId":"143","endLine":98,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":176,"column":7,"nodeType":"142","messageId":"143","endLine":176,"endColumn":18},{"ruleId":"140","severity":1,"message":"141","line":178,"column":9,"nodeType":"142","messageId":"143","endLine":178,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":179,"column":9,"nodeType":"142","messageId":"143","endLine":179,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":188,"column":9,"nodeType":"142","messageId":"143","endLine":188,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":189,"column":9,"nodeType":"142","messageId":"143","endLine":189,"endColumn":20},{"ruleId":"146","severity":2,"message":"147","line":270,"column":39,"nodeType":"148","messageId":"149","endLine":270,"endColumn":41},{"ruleId":"144","severity":1,"message":"145","line":280,"column":21,"nodeType":"142","endLine":280,"endColumn":34},{"ruleId":"150","severity":2,"message":"151","line":297,"column":24,"nodeType":"152","messageId":"153","endLine":297,"endColumn":25},{"ruleId":"154","severity":2,"message":"155","line":306,"column":8,"nodeType":"156","messageId":"157","endLine":311,"endColumn":21},{"ruleId":"150","severity":2,"message":"151","line":306,"column":29,"nodeType":"152","messageId":"153","endLine":306,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":180,"column":7,"nodeType":"142","messageId":"143","endLine":180,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":194,"column":21,"nodeType":"142","endLine":194,"endColumn":34},{"ruleId":"158","severity":2,"message":"159","line":270,"column":5,"nodeType":"160","messageId":"161","endLine":270,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":272,"column":19,"nodeType":"142","endLine":272,"endColumn":32},{"ruleId":"158","severity":2,"message":"162","line":305,"column":5,"nodeType":"160","messageId":"161","endLine":305,"endColumn":15},{"ruleId":"140","severity":1,"message":"141","line":212,"column":7,"nodeType":"142","messageId":"143","endLine":212,"endColumn":20},{"ruleId":"158","severity":2,"message":"163","line":216,"column":5,"nodeType":"160","messageId":"161","endLine":216,"endColumn":17},{"ruleId":"144","severity":1,"message":"145","line":221,"column":21,"nodeType":"142","endLine":221,"endColumn":34},{"ruleId":"158","severity":2,"message":"159","line":267,"column":5,"nodeType":"160","messageId":"161","endLine":267,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":269,"column":19,"nodeType":"142","endLine":269,"endColumn":32},{"ruleId":"144","severity":1,"message":"145","line":80,"column":23,"nodeType":"142","endLine":80,"endColumn":36},{"ruleId":"150","severity":2,"message":"151","line":97,"column":26,"nodeType":"152","messageId":"153","endLine":97,"endColumn":27},{"ruleId":"140","severity":1,"message":"141","line":109,"column":9,"nodeType":"142","messageId":"143","endLine":109,"endColumn":22},{"ruleId":"140","severity":1,"message":"141","line":53,"column":7,"nodeType":"142","messageId":"143","endLine":53,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":92,"column":7,"nodeType":"142","messageId":"143","endLine":92,"endColumn":20},"unicorn/prefer-exponentiation-operator",["164"],"no-console","Unexpected console statement.","MemberExpression","unexpected","import/no-named-as-default-member","Caution: `firebase` also has a named export `auth`. Check if you meant to write `import {auth} from '../plugins/firebase'` instead.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","require-await","Async method 'tagTime' has no 'await' expression.","FunctionExpression","missingAwait","Async method 'edit' has no 'await' expression.","Async method 'update' has no 'await' expression.","prefer-exponentiation-operator"]